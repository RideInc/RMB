{"version":3,"sources":["components/header/index.js","components/header/header.js","components/actions/actions.js","components/categories/head/head.js","components/categories/head/index.js","service/question-data.js","components/categories/create-category/create-category.js","components/categories/create-category/index.js","components/categories/list/list.js","components/categories/list/index.js","components/categories/index.js","components/categories/categories.js","components/questions/head/head.js","components/questions/head/index.js","components/questions/list/index.js","components/questions/list/list.js","components/questions/player/player.js","components/questions/player/index.js","components/questions/add-question/add-question.js","components/questions/add-question/index.js","components/questions/edit/edit.js","components/questions/edit/index.js","components/questions/index.js","components/questions/questions.js","components/confirm/confirm.js","components/confirm/index.js","components/alerts/alert.js","components/alerts/index.js","components/row/index.js","components/row/row.js","components/app/app.js","components/app/index.js","components/reducer/reducer.js","components/reducer/index.js","index.js"],"names":["Header","className","setCategory","id","type","payload","setQuestion","editQuestion","alert","text","confirm","func","name","new_name","Head","search","e","props","categorySearch","target","value","dateConverter","date","day","getDate","month","getMonth","year","getFullYear","substring","length","template_text","this","Date","document","getElementById","onChange","placeholder","Component","connect","state","dispatch","Base","require","localStorage","serialObj","JSON","stringify","setItem","QuestionData","parse","getItem","setBase","data","removeItem","findId","category","question","i","j","findCountById","num","getAddedTime","now","seconds","minutes","hours","days","Math","floor","createCategory","push","removeCategory","splice","createQuestion","currentCategory","answer","timeStamp","undefined","addedInNEW","insideDate","map","item","pow","indexOf","show","display","addBookmark","bookmark","addedInBookmarks","updateBookmarkData","removeQuestion","rename","newName","changeQuestion","currentQuestion","newQuestion","newAnswer","alignToFitScreen","height","width","scr_width","documentElement","clientWidth","scr_height","clientHeight","findNameByStringDate","split","CreateCategory","check","newCategoryInput","String","update","setTimeout","onEnter","which","preventDefault","onKeyDown","ref","onClick","List","delCategory","startEdit","count","style","focus","closeEdit","items","term","filter","toLowerCase","visibleItems","buttons_1","buttons_2","bookmarks","Fragment","data-title","onSelectCategory","editCategory","Categories","scroll","questionSearch","button","addButton","categoryId","categoryCount","categoryName","addNewQuestion","defaultValue","onSelectQuestion","content","delQuestion","link","checkOnDisabled","obj","classList","key","removeFromBookmarks","Player","selectNamber","selectQNamber","select","action","Number","answerArea","setState","questionArea","help","fastCheck","pulseTextarea","textarea","deleteQuestion","hidePlayer","keyCode","shiftKey","linkOnEdit","addBookmarkBtn","questionCount","questionCountInNew","doneQuestionList","inputValue","categoryDetector","category_id","test","remove","prevProps","prevState","stock","Link","to","role","aria-label","aria-describedby","disabled","AddQuestion","SelectCategory","Edit","editQuestionArea","editAnswerArea","console","log","t","Questions","addMenu","editMenu","head","Confirm","keyEsc","modalClose","modalOpen","modal","btn","modalContent","hasAttribute","modalAccept","dateRecomender","first","second","firstStamp","secondStamp","difference","pass","recomend","timestamp","getTime","changeDate","second_date","today","local_convert","full_date","toLocaleString","split_str","next_day","prev_day","research_date","categry_message","recomendDate","innerText","fill","hold","aria-hidden","Alert","Row","left","right","App","initialState","reducer","store","createStore","ReactDOM","render"],"mappings":"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","file":"static/js/main.3ad0e43a.chunk.js","sourcesContent":["import Header from './header';\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>Redux Memory Base</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const update = () => ({ type: 'UPDATE' })\r\n\r\nconst setCategory = (id) => ({ type: 'SET_CATEGORY',\r\n                               payload: id })\r\n\r\nconst setQuestion = (id) => ({ type: 'SET_QUESTION',\r\n                               payload: id })\r\n\r\nconst hidePlayer = () => ({ type: 'HIDE_PLAYER' })\r\n\r\nconst addNewQuestion = () => ({ type: 'ADD_NEW_QUESTION' })\r\n\r\nconst editCategory = () => ({ type: 'EDIT_CATEGORY' })\r\n\r\nconst editQuestion = (id) => ({ type: 'EDIT_QUESTION',\r\n                                payload: id})\r\n\r\nconst alert = (text, type = true) => ({ type: 'ALERT',\r\n                                        payload: [text, type] })\r\n\r\nconst categorySearch = (text) => ({ type: 'CATEGORY_SEARCH',\r\n                                    payload: text })\r\n\r\nconst questionSearch = (text) => ({ type: 'QUESTION_SEARCH',\r\n                                    payload: text  })\r\n\r\nconst confirm = (func = () => {}, id, type, name = '', new_name = '') => ({\r\n  type: 'MODAL',\r\n  payload: [func, id, type, name, new_name]\r\n})\r\n\r\nexport {\r\n  setCategory,\r\n  setQuestion,\r\n  hidePlayer,\r\n  update,\r\n  addNewQuestion,\r\n  editCategory,\r\n  editQuestion,\r\n  alert,\r\n  categorySearch,\r\n  questionSearch,\r\n  confirm\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { categorySearch } from '../../actions';\r\n\r\nclass Head extends Component {\r\n\r\n  search = (e) => {\r\n    this.props.categorySearch(e.target.value)\r\n  }\r\n\r\n  dateConverter = (date) => {\r\n    let day   =  '' + date.getDate();\r\n    let month =  '' + (date.getMonth() + 1);\r\n    let year  = ('' + date.getFullYear()).substring(2)\r\n    if (day.length   === 1)   day = '0' + day\r\n    if (month.length === 1) month = '0' + month\r\n    return `${day}.${month}.${year}`\r\n  }\r\n\r\n  componentDidMount() {\r\n    let template_text = this.dateConverter(new Date())\r\n    this.props.categorySearch(template_text)\r\n    document.getElementById('category_search').value = template_text\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"list-group-item header category\">\r\n        <p>Select a Category:</p>\r\n        <input\r\n          id=\"category_search\"\r\n          onChange={ (e) => this.search(e) }\r\n          className=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"search\"/>\r\n      </li>\r\n    )\r\n  }\r\n\r\n};\r\nconst mapStateToProps = (state) => ({ state: state })\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    categorySearch: (text) => dispatch(categorySearch(text))\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Head)\r\n","import Head from './head';\r\n\r\nexport default Head;\r\n","const Base = require('./default.json')\r\n\r\nif (!localStorage.Base) {\r\n  const serialObj = JSON.stringify(Base)\r\n  localStorage.setItem('Base', serialObj)\r\n}\r\n\r\nconst QuestionData = JSON.parse(localStorage.getItem(\"Base\"))\r\n\r\nconst setBase = (data) => {\r\n  const serialObj = JSON.stringify(data)\r\n  localStorage.removeItem(Base)\r\n  localStorage.setItem('Base', serialObj)\r\n};\r\n\r\nconst findId = (category, question = 0) => {\r\n  const data = QuestionData;\r\n  let id = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    for (let j = 0; j < data[i].length; j++) {\r\n      if (i === category) {\r\n        if (j === question){\r\n          id = data[i][j].id;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return id\r\n};\r\n\r\nconst findCountById = (id, type = true) => {\r\n  let data = QuestionData, num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    for (let j = 0; j < data[i].length; j++) {\r\n      if (data[i][j].id === id) {\r\n        num = type ? i : j\r\n      }\r\n    }\r\n  }\r\n  return num\r\n};\r\n\r\nconst getAddedTime = (id, type = 'days') => {\r\n  const now = Date.now();\r\n  const seconds = (now - id) / 1000;\r\n  const minutes = seconds / 60;\r\n  const hours = minutes / 60;\r\n  const days = hours / 24;\r\n\r\n  if (type === 'days'   ) return Math.floor(days);\r\n  if (type === 'seconds') return Math.floor(seconds);\r\n  if (type === 'minutes') return Math.floor(minutes);\r\n  if (type === 'hours'  ) return Math.floor(hours);\r\n  if (type === 'seconds') return Math.floor(seconds);\r\n}\r\n\r\n// 1552330022551\r\n\r\nconst createCategory = (name, id) => {\r\n  QuestionData.push([{name: name, id: id }])\r\n  setBase(QuestionData)\r\n};\r\n\r\nconst removeCategory = (i) => {\r\n  const id = findCountById(i)\r\n  QuestionData.splice(id,1);\r\n  setBase(QuestionData);\r\n};\r\n\r\nconst createQuestion = (currentCategory, question, answer, id, timeStamp) => {\r\n  timeStamp = timeStamp === undefined ? Date.now() : timeStamp\r\n  QuestionData[currentCategory].push({\r\n    id: id,\r\n    question: question,\r\n    answer: answer,\r\n    date:timeStamp\r\n  });\r\n  setBase(QuestionData);\r\n};\r\n\r\nconst addedInNEW = function() {\r\n  let data = QuestionData, insideDate = []\r\n  data[0].map((item, i) => insideDate[i] = item.date )\r\n  data[0].splice(1, data[0].length)\r\n  for (let i = 2; i < data.length; i++) {\r\n    for (let j = 1; j < data[i].length; j++) {\r\n      const {question, answer, date } = data[i][j];\r\n      const id = data[i][j].id - Math.pow(10,12);\r\n      if (getAddedTime(date) < 3) {\r\n        if (insideDate.indexOf(QuestionData[0]) === -1) {\r\n          createQuestion(0, question, answer, id, date);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  let show = QuestionData[0].length === 1 ? false : true\r\n  QuestionData[0][0].display = show\r\n};\r\n\r\nconst addBookmark = function(id) {\r\n  const category = findCountById(id);\r\n  const question = findCountById(id, false);\r\n  if (QuestionData[category][question].bookmark === true){\r\n    QuestionData[category][question].bookmark = false\r\n  } else {\r\n    QuestionData[category][question].bookmark = true\r\n  }\r\n  QuestionData[1].splice(1,QuestionData[1].length - 1);\r\n  setBase(QuestionData);\r\n  addedInBookmarks();\r\n}\r\n\r\nconst updateBookmarkData = function() {\r\n  let data = QuestionData, insideDate = []\r\n  data[1].map((item, i) => {\r\n    if (item.date === undefined) return null\r\n    return insideDate[i] = item.date\r\n  })\r\n  return insideDate\r\n}\r\n\r\nconst removeQuestion = (currentCategory, i) => {\r\n  QuestionData[currentCategory].splice(i,1);\r\n  setBase(QuestionData);\r\n}\r\n\r\nconst addedInBookmarks = function() {\r\n  let data = QuestionData;\r\n  updateBookmarkData();\r\n  for (let i = 2; i < data.length; i++) {\r\n    for (let j = 1; j < data[i].length; j++) {\r\n      const { question, answer, bookmark, date } = data[i][j];\r\n      const id = data[i][j].id - Math.pow(10,11);\r\n      if (bookmark === true) {\r\n        if (updateBookmarkData().indexOf(data[i][j].date) === -1) {\r\n          createQuestion(1, question, answer, id, date);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  let show = QuestionData[1].length === 1 ? false : true\r\n  QuestionData[1][0].display = show\r\n}\r\n\r\n\r\nconst rename = (currentCategory, newName) => {\r\n  QuestionData[currentCategory][0].name = newName;\r\n  setBase(QuestionData);\r\n}\r\n\r\nconst changeQuestion = (currentCategory,\r\n currentQuestion, newQuestion, newAnswer) => {\r\n  QuestionData[currentCategory][currentQuestion]\r\n    .question = newQuestion;\r\n  QuestionData[currentCategory][currentQuestion]\r\n    .answer = newAnswer;\r\n  setBase(QuestionData);\r\n}\r\n\r\nconst alignToFitScreen = (type) => {\r\n  const scr_width = document.documentElement.clientWidth;\r\n  const scr_height = document.documentElement.clientHeight;\r\n  let height, width;\r\n  if (scr_width <= 992) { width = 1 }\r\n  else { width = height }\r\n  if (scr_height <= 1050 && scr_height >= 1000) height = 19\r\n  if (scr_height <= 1000 && scr_height >= 950) height = 19\r\n  if (scr_height <= 950  && scr_height >= 900) height = 18\r\n  if (scr_height <= 900  && scr_height >= 850) height = 17\r\n  if (scr_height <= 850  && scr_height >= 800) height = 16\r\n  if (scr_height <= 800  && scr_height >= 750) height = 15\r\n  if (scr_height <= 750  && scr_height >= 700) height = 14\r\n  if (scr_height <= 700  && scr_height >= 650) height = 13\r\n  if (scr_height <= 650  && scr_height >= 600) height = 13\r\n  if (scr_height <= 600  && scr_height >= 550) height = 10\r\n  if (scr_height <= 550  && scr_height >= 500) height = 10\r\n  if (scr_height <= 500  && scr_height >= 450) height = 9\r\n  if (scr_height <= 450  && scr_height >= 400) height = 9\r\n  if (scr_height <= 400  && scr_height >= 350) height = 8\r\n  if (scr_height <= 350  && scr_height >= 300) height = 5\r\n  if (scr_height <= 300  && scr_height >= 250) height = 5\r\n  if (scr_height <= 250  && scr_height >= 200) height = 4\r\n  if (scr_height <= 200  && scr_height >= 150) height = 4\r\n  if (scr_height <= 150  && scr_height >= 100) height = 3\r\n  if (type === 'width') return width;\r\n  if (type === 'height') return height;\r\n}\r\n\r\nconst findNameByStringDate = (name) => {\r\n  let data = QuestionData, num = 0;\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (data[i][0].name.split(' - ')[1] === name) num++\r\n  }\r\n  return num\r\n}\r\n\r\naddedInNEW();\r\naddBookmark();\r\n\r\nexport {\r\n  QuestionData,\r\n  createCategory,\r\n  removeCategory,\r\n  createQuestion,\r\n  removeQuestion,\r\n  rename,\r\n  changeQuestion,\r\n  findId,\r\n  findCountById,\r\n  addedInNEW,\r\n  addBookmark,\r\n  alignToFitScreen,\r\n  findNameByStringDate\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createCategory } from '../../../service/question-data.js';\r\n\r\nimport { update, alert } from '../../actions';\r\n\r\nimport './create-category.css';\r\n\r\nclass CreateCategory extends Component {\r\n\r\n  check = () => {\r\n    const { value } = this.newCategoryInput\r\n    if (value !== '' && String(value).length < 25) {\r\n      const id = Date.now();\r\n      createCategory(value, id);\r\n      this.props.update();\r\n      this.newCategoryInput.value = '';\r\n      this.props.alert('Category created');\r\n    } else {\r\n      this.newCategoryInput.className = 'form-control danger';\r\n      setTimeout(() => {\r\n        this.newCategoryInput.className = 'form-control';\r\n      }, 1800);\r\n      if (String(value).length > 25) {\r\n        this.props.alert('Category name is too long', false);\r\n      } else {\r\n        this.props.alert('The category must have a name', false);\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  onEnter = (e) => {\r\n    if (e.which === 13) {\r\n      e.preventDefault();\r\n      this.check();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return(\r\n        <li className=\"list-group-item item\">\r\n          <form>\r\n            <div className =\"form-group categories\">\r\n              <input type=\"text\"\r\n                onKeyDown={ (e) => this.onEnter(e) }\r\n                className=\"form-control\"\r\n                id=\"categoryName\"\r\n                ref={(e) => { this.newCategoryInput = e }}\r\n                placeholder=\"Create new category\" />\r\n            </div>\r\n            <button\r\n               type=\"button\" onClick={ this.check }\r\n               className=\"btn btn-secondary list\">\r\n               <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n          </form>\r\n        </li>\r\n    )\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    update: () => dispatch(update()),\r\n    alert: (text,type) => dispatch(alert(text,type))\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateCategory)\r\n","import CreateCategory from './create-category';\r\n\r\nexport default CreateCategory;\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  QuestionData,\r\n  removeCategory,\r\n  rename,\r\n  findCountById,\r\n  addedInNEW,\r\n  addBookmark } from '../../../service/question-data.js';\r\n\r\nimport {\r\n  setCategory,\r\n  update,\r\n  editCategory,\r\n  alert,\r\n  confirm } from '../../actions';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass List extends Component {\r\n\r\n  delCategory = (id) => {\r\n      removeCategory(id)\r\n      addedInNEW();\r\n      addBookmark();\r\n      this.props.update()\r\n  };\r\n\r\n  startEdit = (id) => {\r\n    const count = findCountById(id)\r\n    const name = QuestionData[count][0].name\r\n    document.getElementById(`rename_${id}`).value = name;\r\n    document.getElementById(`category_${id}`).style.display = 'none';\r\n    document.getElementById(`form_${id}`).style.display = 'flex';\r\n    document.getElementById(`rename_${id}`).focus();\r\n  }\r\n\r\n  closeEdit = (id) => {\r\n    document.getElementById(`category_${id}`).style.display = 'flex';\r\n    document.getElementById(`form_${id}`).style.display = 'none';\r\n  }\r\n\r\n  check = (id) => {\r\n    const name = document.getElementById(`rename_${id}`).value\r\n    if (name !== '') {\r\n      rename(findCountById(id),name);\r\n      this.props.update();\r\n      this.props.alert('Category renamed');\r\n      this.closeEdit(id);\r\n\r\n    } else {\r\n      document.getElementById(`rename_${id}`)\r\n        .className = 'rename danger';\r\n\r\n      setTimeout(() => {\r\n        document.getElementById(`rename_${id}`)\r\n          .className = 'rename';\r\n      }, 1800);\r\n\r\n      this.props.alert('The category must have a name', false)\r\n    }\r\n  }\r\n\r\n  onEnter = (e, id) => {\r\n    if (e.which === 13) {\r\n      e.preventDefault();\r\n      this.check(id);\r\n    }\r\n  }\r\n\r\n  search = (items, term) => {\r\n\r\n    if (term.length === 0) return items;\r\n\r\n    return items.filter((item) => {\r\n      return item[0].name\r\n              .toLowerCase()\r\n              .indexOf(term.toLowerCase()) > -1;\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const term = this.props.state[7]\r\n    let visibleItems = this.search(QuestionData, term);\r\n    const items = visibleItems.map((item, i) => {\r\n\r\n      const { name, id } = item[0];\r\n      const { length } = visibleItems[i];\r\n      let buttons_1, buttons_2;\r\n      let newQuestion = id === 1111 ? <i className=\"fas fa-fire\"></i> : null\r\n      let bookmarks = id === 2222 ? <i className=\"fas fa-bookmark\"></i> : null\r\n\r\n      if (id !== 1111 && id !== 2222) {\r\n        buttons_1 = (\r\n          <React.Fragment>\r\n            <button\r\n               type=\"button\" onClick={ () => this.startEdit(id) }\r\n               className=\"btn btn-secondary list\">\r\n               <i className=\"far fa-edit\"></i>\r\n            </button>\r\n            <button\r\n              type=\"button\" onClick={ () => {\r\n\r\n                this.props.confirm(this.delCategory,\r\n                                    id, 'del_category') }\r\n\r\n              }\r\n              className=\"btn btn-secondary list\">\r\n              <i className=\"far fa-trash-alt\"></i>\r\n            </button>\r\n          </React.Fragment>\r\n        )\r\n        buttons_2 = (\r\n          <React.Fragment>\r\n            <button\r\n               type=\"button\" onClick={ () => this.check(id) }\r\n               data-title=\"Apply\"\r\n               className=\"btn btn-secondary list\">\r\n               <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button\r\n              type=\"button\" onClick={ () => this.closeEdit(id) }\r\n              className=\"btn btn-secondary list\">\r\n              <i className=\"fas fa-times\"></i>\r\n            </button>\r\n          </React.Fragment>\r\n        )\r\n      }\r\n\r\n      let display = '';\r\n      if (id === 1111) {\r\n        if (QuestionData[0][0].display === false) display = 'hide'\r\n      }\r\n      if (id === 2222) {\r\n        if (QuestionData[1][0].display === false) display = 'hide'\r\n      }\r\n\r\n\r\n      return(\r\n        <li key={ id } className={`over_li ${display}`}>\r\n          <ul className=\"under_ul\">\r\n\r\n            <li id={`category_${id}`}\r\n              className=\"list-group-item item\">\r\n              <p onClick={ () => this.props.onSelectCategory(id) }>\r\n                { newQuestion }\r\n                { bookmarks }\r\n                { name }<span className=\"badge badge-success\">\r\n                {length - 1}</span>\r\n              </p>\r\n              { buttons_1 }\r\n            </li>\r\n\r\n            <li id={`form_${id}`}\r\n              className=\"list-group-item item editCategoryInput\">\r\n              <input id={`rename_${id}`}\r\n                onKeyDown={ (e) => this.onEnter(e, id) }\r\n                className=\"rename\"\r\n                type=\"text\" />\r\n              { buttons_2 }\r\n            </li>\r\n\r\n          </ul>\r\n        </li>\r\n      )\r\n    });\r\n\r\n    return(\r\n      <React.Fragment>\r\n        { items }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSelectCategory: (id) => dispatch(setCategory(id)),\r\n    update: () => dispatch(update()),\r\n    editCategory: () => dispatch(editCategory()),\r\n    alert: (text, type) => dispatch(alert(text, type)),\r\n    confirm: (func, id, type) => dispatch(confirm(func, id, type))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import List from './list';\r\n\r\nexport default List;\r\n","import Categories from './categories';\r\n\r\nexport default Categories;\r\n","import React from 'react';\r\n\r\nimport './categories.css';\r\n\r\nimport Head from './head';\r\nimport CreateCategory from './create-category';\r\nimport List from './list';\r\nimport { QuestionData,\r\n    alignToFitScreen } from '../../service/question-data.js';\r\n\r\nconst Categories = () => {\r\n  let scroll = 'disabled'\r\n  if (QuestionData.length > alignToFitScreen('width')) scroll = '' ;\r\n  if (QuestionData.length > alignToFitScreen('height') - 1) scroll = '' ;\r\n\r\n  return(\r\n    <ul className=\"list-group\">\r\n      <Head />\r\n      <div className={`list ${ scroll }`}>\r\n        <CreateCategory />\r\n        <List />\r\n      </div>\r\n    </ul>\r\n  );\r\n\r\n}\r\n\r\nexport default Categories;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  QuestionData,\r\n  findCountById } from '../../../service/question-data.js';\r\n\r\nimport { addNewQuestion, questionSearch } from '../../actions';\r\n\r\nclass Head extends Component {\r\n\r\n  search = (e) => {\r\n    this.props.questionSearch(e.target.value)\r\n  }\r\n\r\n\r\n  render() {\r\n    const categoryId = this.props.state[0]\r\n    const categoryCount = findCountById(categoryId)\r\n    const categoryName = QuestionData[categoryCount][0].name\r\n    let button, addButton;\r\n    addButton = (\r\n      <button\r\n        type=\"button\" onClick={ (e) => this.props.addNewQuestion(e) }\r\n        className=\"btn btn-secondary list head\"\r\n        data-title=\"Add question\">\r\n        <i className=\"fas fa-plus\"></i>\r\n      </button>\r\n    )\r\n\r\n    if (categoryId === 1111 || categoryId === 2222) addButton = null;\r\n    if (categoryId === null) {\r\n      button = null;\r\n    } else {\r\n      button = (\r\n        <React.Fragment>\r\n          <input\r\n            defaultValue={this.props.state[8]}\r\n            onChange={ (e) => this.search(e) }\r\n            className=\"search\"\r\n            type=\"text\"\r\n            placeholder=\"search\"/>\r\n          { addButton }\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <li className=\"list-group-item header\">\r\n        <p>{ categoryName }</p>\r\n        { button }\r\n      </li>\r\n    )\r\n  }\r\n\r\n};\r\nconst mapStateToProps = (state) => ({ state: state })\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    addNewQuestion: () => dispatch(addNewQuestion()),\r\n    questionSearch: (text) => dispatch(questionSearch(text))\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Head);\r\n","import Head from './head';\r\n\r\nexport default Head;\r\n","import List from './list';\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport {\r\n  QuestionData,\r\n  removeQuestion,\r\n  findId,\r\n  findCountById,\r\n  addedInNEW,\r\n  addBookmark,\r\n  alignToFitScreen } from '../../../service/question-data.js';\r\n\r\nimport {\r\n  setCategory,\r\n  setQuestion,\r\n  editQuestion,\r\n  addNewQuestion,\r\n  update,\r\n  confirm } from '../../actions';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nconst List = (props) => {\r\n\r\n  const currentCategory = findCountById(props.state[0]);\r\n  let content;\r\n\r\n  const delQuestion = (id) => {\r\n    let link = id;\r\n    if (props.state[0] === 1111) {\r\n      link = id + Math.pow(10,12)\r\n      if (QuestionData[0].length === 2) {\r\n        props.update();\r\n      } else props.setCategory(findId(currentCategory))\r\n    }   else props.setCategory(findId(currentCategory))\r\n    removeQuestion(findCountById(link), findCountById(link, false))\r\n    addedInNEW();\r\n    addBookmark();\r\n  }\r\n\r\n  const checkOnDisabled = (e, func) => {\r\n    let obj = e.target.classList\r\n    for (let key in obj) {\r\n      if (obj[key] === 'disabled') {\r\n        return null\r\n      }\r\n    }\r\n    func();\r\n  }\r\n\r\n  const removeFromBookmarks = (id) => {\r\n    const link = id + Math.pow(10,11)\r\n    addBookmark(link)\r\n    if (QuestionData[1].length === 1) {\r\n      props.update();\r\n    } else {\r\n      props.setCategory(findId(currentCategory))\r\n    }\r\n  }\r\n\r\n  if (!currentCategory) {\r\n    content = (\r\n      <li className=\"list-group-item item\">\r\n        <p className=\"empty\">Select a category of questions</p>\r\n      </li>\r\n    )\r\n  };\r\n\r\n  if (currentCategory !== null) {\r\n\r\n    const search = (items, term) => {\r\n      if (term.length === 0) return items;\r\n\r\n      return items.filter((item, i) => {\r\n        if (i !== 0) return item.question\r\n                                .toLowerCase()\r\n                                .indexOf(term.toLowerCase()) > -1;\r\n        return null\r\n      })\r\n    }\r\n\r\n    const term = props.state[8]\r\n    let visibleItems = search(QuestionData[currentCategory], term);\r\n\r\n    if (QuestionData[currentCategory] !== undefined) {\r\n      content = visibleItems.map((item, i) => {\r\n\r\n        let { question } = visibleItems[i];\r\n\r\n\r\n        if (visibleItems[i].question === undefined) return null\r\n\r\n        if (String(visibleItems[i].question).length > 30) {\r\n          question = String(visibleItems[i].question).substring(0,30) + '...';\r\n        }\r\n\r\n        const categoryId = props.state[0]\r\n\r\n        //if (categoryId === 1111) {\r\n          //const questionLink = findCountById(item.id + Math.pow(10,12))\r\n          //const categoryName = QuestionData[questionLink][0].name\r\n        //}\r\n\r\n        let button = (\r\n            <button\r\n              type=\"button\"\r\n\r\n              onClick={ (e) => checkOnDisabled(e,\r\n                        ( ) => props.confirm(delQuestion,\r\n                                              id, 'del_question')) }\r\n\r\n              className={`btn btn-secondary list`}>\r\n              <i className={`far fa-trash-alt`}></i>\r\n            </button>\r\n        );\r\n\r\n        if (categoryId === 2222) button = (\r\n          <button\r\n             type=\"button\"\r\n             onClick={ () => removeFromBookmarks(id) }\r\n             className={`btn btn-secondary list`}>\r\n             <i className={`fas fa-times`}></i>\r\n          </button>\r\n        )\r\n\r\n        const { id } = item\r\n        return (\r\n          <li key={ id }\r\n            className=\"list-group-item item\">\r\n            <p onClick={ () => props.onSelectQuestion(id) }>\r\n              { question }\r\n            </p>\r\n            <button\r\n               type=\"button\"\r\n               onClick={ (e) => checkOnDisabled(e, () => props.editQuestion(id)) }\r\n               className={`btn btn-secondary list`}>\r\n               <i className={`far fa-edit`}></i>\r\n            </button>\r\n            { button }\r\n          </li>\r\n        )\r\n      })\r\n\r\n    };\r\n\r\n    if (props.state[0] === null) {\r\n      content = (\r\n        <li className=\"list-group-item item\">\r\n          <p className=\"empty\">\r\n            Select a category of questions\r\n          </p>\r\n        </li>\r\n      )\r\n    }\r\n\r\n    if (props.state[0] !== null) {\r\n      if (QuestionData[currentCategory].length === 1)\r\n      content = (\r\n        <li className=\"list-group-item item\">\r\n          <p onClick={ () => props.addNewQuestion() }\r\n            className=\"empty\">+ Add Question\r\n          </p>\r\n        </li>\r\n      )\r\n    }\r\n  }\r\n\r\n  let scroll = 'disabled'\r\n\r\n  if(props.state[0] !== null) {\r\n    const { length } = QuestionData[currentCategory]\r\n    if (length >= alignToFitScreen('width')) scroll = ''\r\n    if (length >= alignToFitScreen('height')) scroll = ''\r\n  }\r\n\r\n  return (\r\n    <div className={`list ${ scroll }`}>\r\n      { content }\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    setCategory: (id) => dispatch(setCategory(id)),\r\n    onSelectQuestion: (id) => dispatch(setQuestion(id)),\r\n    editQuestion: (id) => dispatch(editQuestion(id)),\r\n    addNewQuestion: () => dispatch(addNewQuestion()),\r\n    update: () => dispatch(update()),\r\n    confirm: (func, id, type) => dispatch(confirm(func, id, type))\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  QuestionData, removeQuestion, findCountById, findId, rename,\r\n  addedInNEW, addBookmark } from '../../../service/question-data.js';\r\n\r\nimport { setQuestion, hidePlayer, editQuestion, alert,\r\n  update, confirm  } from '../../actions';\r\n\r\nimport './player.css';\r\n\r\nclass Player extends Component {\r\n\r\n  state = { update: 0 }\r\n  // test\r\n  componentDidMount() {\r\n    const currentQuestion = findCountById(this.props.state[1], false);\r\n    this.selectQNamber.value = currentQuestion;\r\n  }\r\n\r\n  selectNamber = () => {\r\n    this.selectQNamber.select();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.update !== prevState.update) {\r\n      const currentQuestion = findCountById(this.props.state[1], false);\r\n      this.selectQNamber.value = currentQuestion;\r\n    }\r\n  }\r\n\r\n  changeQuestion = (action) => {\r\n    const { setQuestion } = this.props\r\n    const currentCategory = findCountById(this.props.state[0]);\r\n    const currentQuestion = findCountById(this.props.state[1], false);\r\n    const length = QuestionData[currentCategory].length - 1\r\n    const { question } = QuestionData[currentCategory][currentQuestion];\r\n    const value = Number(this.selectQNamber.value);\r\n    this.answerArea.className = 'you-answer'\r\n    let count;\r\n\r\n    if (action === '+') {\r\n      if (currentQuestion === length) {\r\n        setQuestion(findId(currentCategory,1));\r\n      } else {\r\n        count = currentQuestion + 1\r\n        setQuestion(findId(currentCategory,count));\r\n      }\r\n    }\r\n    if (action === '-') {\r\n      if (currentQuestion === 1) {\r\n          setQuestion(findId(currentCategory,length));\r\n      } else {\r\n        count = currentQuestion - 1\r\n        setQuestion(findId(currentCategory,count));\r\n      }\r\n    }\r\n    if (action === '>>') setQuestion(findId(currentCategory,length));\r\n    if (action === 'number') {\r\n      if (value > length || value < 1) {\r\n        this.props.alert('Question not found', false);\r\n        this.selectQNamber.value = currentQuestion;\r\n      } else {\r\n        setQuestion(findId(currentCategory,value));\r\n      }\r\n\r\n    }\r\n\r\n    this.setState({ update: this.state.update + 1});\r\n    this.questionArea.value = question;\r\n    this.answerArea.value = '';\r\n  }\r\n\r\n  help = () => {\r\n    const currentCategory = findCountById(this.props.state[0]);\r\n    const currentQuestion = findCountById(this.props.state[1], false);\r\n    const { answer } = QuestionData[currentCategory][currentQuestion];\r\n    this.answerArea.value = answer;\r\n    this.fastCheck();\r\n  }\r\n\r\n  fastCheck = () => {\r\n    const currentCategory = findCountById(this.props.state[0]);\r\n    const currentQuestion = findCountById(this.props.state[1], false);\r\n    const { answer } = QuestionData[currentCategory][currentQuestion];\r\n    if (this.answerArea.value === answer) {\r\n      this.answerArea.className = 'you-answer success'\r\n    } else this.answerArea.className = 'you-answer'\r\n  }\r\n\r\n  check = () => {\r\n    const currentCategory = findCountById(this.props.state[0]);\r\n    const currentQuestion = findCountById(this.props.state[1], false);\r\n    const { answer } = QuestionData[currentCategory][currentQuestion];\r\n    if (this.answerArea.value === answer){\r\n      this.changeQuestion('+');\r\n      this.props.alert('Answer is correct')\r\n    } else this.pulseTextarea(this.answerArea)\r\n  };\r\n\r\n  pulseTextarea = (textarea) => {\r\n    textarea.className = 'you-answer danger';\r\n    setTimeout(() => { textarea.className = 'you-answer' }, 1800);\r\n    this.props.alert('Answer is not correct', false)\r\n  };\r\n\r\n  deleteQuestion = (currentQuestion) => {\r\n    const categoryCount = findCountById(this.props.state[0])\r\n    let link = findId(categoryCount, currentQuestion);\r\n    if (this.props.state[0] === 1111) {\r\n      link = link + Math.pow(10,12)\r\n      if (QuestionData[0].length === 2) this.props.update();\r\n    }\r\n    if (this.props.state[0] === 2222) {\r\n      link = link + Math.pow(10,11)\r\n      if (QuestionData[0].length === 2) this.props.update();\r\n    }\r\n    const { length } = QuestionData[categoryCount];\r\n    removeQuestion(findCountById(link), findCountById(link, false))\r\n    addedInNEW();\r\n    addBookmark();\r\n\r\n    if (length !== 2 || currentQuestion !== length - 1) {\r\n      this.props.setQuestion(findId(categoryCount, currentQuestion))\r\n    }\r\n\r\n    if (length === 2) {\r\n      this.props.hidePlayer()\r\n    } else if (currentQuestion === length - 1) {\r\n      this.props.setQuestion(findId(categoryCount, currentQuestion - 1))\r\n    }\r\n\r\n  }\r\n\r\n  onEnter = (e, func) => {\r\n    if (e.keyCode === 13 && !e.shiftKey) {\r\n      e.preventDefault();\r\n      func();\r\n    }\r\n  }\r\n\r\n  checkOnDisabled = (e, func) => {\r\n    let obj = e.target.classList\r\n    for (let key in obj) {\r\n      if (obj[key] === 'disabled') {\r\n        return null\r\n      }\r\n    }\r\n    func();\r\n  }\r\n\r\n  linkOnEdit = () => {\r\n    const currentCategory = findCountById(this.props.state[0]);\r\n    const currentQuestion = findCountById(this.props.state[1], false);\r\n    this.props.editQuestion(findId(currentCategory ,currentQuestion))\r\n  }\r\n\r\n  addBookmarkBtn = () => {\r\n    let categoryCount, questionCount, currentQuestion;\r\n    if (this.props.state[0] === 2222 || this.props.state[0] === 1111) {\r\n      let link\r\n      const id = this.props.state[1]\r\n      if (this.props.state[0] === 1111) link = id + Math.pow(10,12)\r\n      if (this.props.state[0] === 2222) link = id + Math.pow(10,11)\r\n      categoryCount = findCountById(link)\r\n      questionCount = findCountById(link, false);\r\n      const questionCountInNew = findCountById(this.props.state[1], false);\r\n      currentQuestion = link;\r\n      const length = QuestionData[1].length\r\n\r\n      if (this.props.state[0] === 2222) {\r\n        if (length !== 2 || questionCountInNew !== length - 1) {\r\n          this.props.setQuestion(findId(1, questionCountInNew + 1))\r\n        }\r\n\r\n        if (length === 2) {\r\n          this.props.update();\r\n        } else if (questionCountInNew === length - 1) {\r\n          this.props.setQuestion(findId(1, questionCountInNew - 1))\r\n        }\r\n      }\r\n\r\n    } else {\r\n      categoryCount = findCountById(this.props.state[0]);\r\n      questionCount = findCountById(this.props.state[1], false);\r\n      currentQuestion = this.props.state[1];\r\n    }\r\n      const { bookmark } = QuestionData[categoryCount][questionCount]\r\n      addBookmark(currentQuestion);\r\n      this.setState({ update: this.state.update + 1});\r\n      if (!bookmark) this.props.alert('Question added to bookmarks')\r\n      if (bookmark) this.props.alert('Question removed from bookmarks')\r\n  }\r\n\r\n    doneQuestionList = () => {\r\n      let categoryId = this.props.state[0]\r\n      let inputValue = document.getElementById('modal_input').value\r\n      if (inputValue !== '') {\r\n        rename(findCountById(categoryId),inputValue);\r\n        this.props.update();\r\n        this.props.alert('Category renamed');\r\n      } else this.props.alert('ERROR: modal input is empty', false);\r\n\r\n    }\r\n\r\n    categoryDetector = () => {\r\n      let category_id = this.props.state[0]\r\n      let count = findCountById(category_id)\r\n      //eslint-disable-next-line\r\n      let regexp = /([\\d]{2}[\\.]){2}[\\d]{2}\\s[-]\\s[0-3][\\d][\\.][0-1][\\d][\\.][2][\\d]/\r\n      let { name } = QuestionData[count][0]\r\n      if (regexp.test(name)) {\r\n\r\n        setTimeout(() => {\r\n          document.getElementById('done_btn')\r\n                                    .classList.remove('disabled')\r\n          document.getElementById('fa_check')\r\n                                    .classList.remove('disabled')\r\n\r\n        }, 100)\r\n\r\n      }\r\n    }\r\n\r\n  render() {\r\n    const currentCategory = findCountById(this.props.state[0]);\r\n    const currentQuestion = findCountById(this.props.state[1], false);\r\n\r\n    const { length } = QuestionData[currentCategory]\r\n    const { name } = QuestionData[currentCategory][0];\r\n    const { question } = QuestionData[currentCategory][currentQuestion];\r\n    let insideDate = [], stock;\r\n    QuestionData[1].map((item, i) => insideDate[i] = item.date )\r\n    if (insideDate.indexOf(QuestionData[currentCategory][currentQuestion].date) !== -1) {\r\n      stock = `fas`\r\n    } else stock = `far`\r\n\r\n    let data_title = `Add to bookmarks`;\r\n    if (this.props.state[0] === 1111 || this.props.state[0] === 2222) {\r\n      //const questionId = this.props.state[1];\r\n      let index;\r\n      if (this.props.state[0] === 1111) index = Math.pow(10,12)\r\n      if (this.props.state[0] === 2222) index = Math.pow(10,11)\r\n    }\r\n\r\n    this.categoryDetector()\r\n\r\n    return(\r\n      <React.Fragment>\r\n      <ul className=\"list-group\" id=\"question_list\">\r\n        <li className=\"list-group-item no-active question-bar-head header\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"item crumb question-bar\"\r\n            onClick={ () => this.props.hidePlayer() }>\r\n            <i className=\"fas fa-chevron-left crumb\"></i>\r\n            { name }\r\n          </Link>\r\n          <i className=\"right\">\r\n            { currentQuestion } of { length - 1 }\r\n          </i>\r\n        </li>\r\n      </ul>\r\n      <div className=\"btn-group btn-group-md\"\r\n           role=\"group\"\r\n           aria-label=\"Basic example\">\r\n        <button\r\n           data-title=\"Edit question\"\r\n           type=\"button\"\r\n           onClick={ (e) => this.checkOnDisabled(e, this.linkOnEdit) }\r\n           className={`btn btn-secondary`}>\r\n           <i className={`far fa-edit`}></i>\r\n        </button>\r\n        <button\r\n           type=\"button\"\r\n           onClick={ this.addBookmarkBtn }\r\n           className={`btn btn-secondary`}\r\n           data-title={ data_title }>\r\n           <i className={`${stock} fa-bookmark`}></i>\r\n        </button>\r\n        <button\r\n           type=\"button\" id=\"done_btn\" onClick={\r\n\r\n             (e) => this.checkOnDisabled(e,\r\n             () => this.props.confirm(\r\n             () => this.doneQuestionList(),\r\n             null, 'done', name))\r\n\r\n           }\r\n           className=\"btn btn-secondary disabled\"\r\n           data-title=\"Question list done\">\r\n           <i id=\"fa_check\" className=\"fa fa-check disabled\"></i>\r\n        </button>\r\n        <button\r\n           type=\"button\" onClick={ () => this.changeQuestion('-') }\r\n           className=\"btn btn-secondary\"\r\n           data-title=\"Previous question\">\r\n           <i className=\"fas fa-angle-left\"></i>\r\n        </button>\r\n        <div className=\"input-group\">\r\n          <input type=\"number\" onClick={ this.selectNamber }\r\n            className=\"form-control\" id=\"questionNumber\"\r\n            onKeyDown={ (e) => this.onEnter(e, () => this.changeQuestion('number')) }\r\n            ref={ (e) => { this.selectQNamber = e }}\r\n            aria-label=\"Input group example\"\r\n            aria-describedby=\"btnGroupAddon\"/>\r\n        </div>\r\n        <button id=\"onNextClick\"\r\n           type=\"button\" onClick={ () => this.changeQuestion('+') }\r\n           className=\"btn btn-secondary\"\r\n           data-title=\"Next question\">\r\n           <i className=\"fas fa-angle-right\"></i>\r\n        </button>\r\n        <button\r\n           type=\"button\" onClick={ () => this.changeQuestion('>>') }\r\n           className=\"btn btn-secondary\"\r\n           data-title=\"Go to the last question\">\r\n           <i className=\"fas fa-angle-double-right\"></i>\r\n        </button>\r\n        <button\r\n           type=\"button\" onClick={ this.help }\r\n           className=\"btn btn-secondary\"\r\n           data-title=\"Show answer\">\r\n           <i className=\"fas fa-question\"></i>\r\n        </button>\r\n        <button\r\n           type=\"button\"\r\n           onClick={\r\n\r\n             (e) => this.checkOnDisabled(e,\r\n             ( ) => this.props.confirm(\r\n             ( ) => this.deleteQuestion(currentQuestion),\r\n             currentQuestion, 'del_question'))\r\n\r\n           }\r\n           className={`btn btn-secondary`}\r\n           data-title=\"Delete question\">\r\n           <i className={`far fa-trash-alt`}></i>\r\n        </button>\r\n      </div>\r\n\r\n\r\n      <div className='question-area'>\r\n        <textarea\r\n          value={ question }\r\n          ref={(e) => { this.questionArea = e }}\r\n          disabled/>\r\n        <textarea\r\n          onChange={ this.fastCheck }\r\n          className=\"you-answer\"\r\n          ref={(e) => { this.answerArea = e }}\r\n          id=\"answer\"\r\n          onKeyDown={ (e) => this.onEnter(e, this.check) }/>\r\n        <button\r\n          type=\"button\" onClick={ this.check }\r\n          className=\"btn btn-success btn-sm btn-block\">\r\n          Apply\r\n        </button>\r\n      </div>\r\n      </ React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setQuestion: (id) => dispatch(setQuestion(id)),\r\n    hidePlayer: () => dispatch(hidePlayer()),\r\n    editQuestion: (id) => dispatch(editQuestion(id)),\r\n    alert: (text,type) => dispatch(alert(text,type)),\r\n    update: () => dispatch(update()),\r\n    confirm: (func, id, type, name) => {\r\n      dispatch(confirm(func, id, type, name))\r\n    }\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n","import Player from './player';\r\n\r\nexport default Player;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setCategory, alert } from '../../actions';\r\nimport {\r\n  QuestionData,\r\n  createQuestion,\r\n  findCountById,\r\n  addedInNEW } from '../../../service/question-data.js';\r\n\r\nimport './add-question.css';\r\n\r\nclass AddQuestion extends Component {\r\n\r\n  check = () => {\r\n    const currentCategory = findCountById(this.props.state[0])\r\n    const id = Date.now();\r\n    const question = this.newQuestion.value;\r\n    const answer = this.newAnswer.value;\r\n\r\n    if (question !== '' && answer !== '') {\r\n      createQuestion(currentCategory, question, answer, id)\r\n      addedInNEW();\r\n      this.props.alert('Question added');\r\n      this.newQuestion.focus();\r\n      this.newQuestion.value = '';\r\n      this.newAnswer.value = '';\r\n    }\r\n\r\n    if (question === '') this.pulseTextarea(this.newQuestion);\r\n\r\n    if (answer === '') this.pulseTextarea(this.newAnswer);\r\n  };\r\n\r\n  pulseTextarea = (textarea) => {\r\n    textarea.className = 'rename danger';\r\n    setTimeout(() => { textarea.className = 'rename' }, 1800);\r\n    this.props.alert('Both fields must be filled', false)\r\n  };\r\n\r\n  onEnter = (e, func) => {\r\n    if (e.keyCode === 13 && !e.shiftKey) {\r\n      e.preventDefault();\r\n      this.check();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const currentCategory = this.props.state[0]\r\n    const { SelectCategory } = this.props\r\n    const categoryCount = findCountById(currentCategory);\r\n    const categoryName = QuestionData[categoryCount][0].name\r\n\r\n    return(\r\n      <React.Fragment>\r\n      <ul className=\"list-group\" id=\"question_list\">\r\n        <li className=\"list-group-item header\">\r\n          <p>Add Question in { categoryName } </p>\r\n          <button\r\n           type=\"button\" onClick={ () => SelectCategory(currentCategory) }\r\n           className=\"btn btn-secondary list header\">\r\n           <i className=\"fas fa-chevron-up\"></i>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n\r\n\r\n      <div className='question-area'>\r\n        <textarea\r\n          ref={(e) => { this.newQuestion = e }}\r\n          placeholder='Вопрос'>\r\n        </textarea>\r\n        <textarea\r\n          ref={(e) => { this.newAnswer = e }}\r\n          onKeyDown={ this.onEnter }/>\r\n        <button\r\n          type=\"button\"\r\n          onClick={ this.check }\r\n          className=\"btn btn-success btn-sm btn-block\">\r\n          Add\r\n        </button>\r\n      </div>\r\n      </ React.Fragment>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    SelectCategory: (id) => dispatch(setCategory(id)),\r\n    alert: (text, type) => dispatch(alert(text, type))\r\n   }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddQuestion);\r\n","import AddQuestion from './add-question';\r\n\r\nexport default AddQuestion;\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n  QuestionData,\r\n  changeQuestion,\r\n  findCountById,\r\n  findId,\r\n  addedInNEW,\r\n  addBookmark } from '../../../service/question-data.js';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { setQuestion, alert } from '../../actions';\r\n\r\nimport './edit.css';\r\n\r\nclass Edit extends Component {\r\n\r\n  componentDidMount() {\r\n    const currentCategory = findCountById(this.props.state[0])\r\n    const currentQuestion = findCountById(this.props.state[1], false);\r\n    const { question } = QuestionData[currentCategory][currentQuestion]\r\n    const { answer } = QuestionData[currentCategory][currentQuestion]\r\n\r\n    this.editQuestionArea.value = question;\r\n    this.editAnswerArea.value = answer;\r\n  }\r\n\r\n  check = () => {\r\n    const question = this.editQuestionArea.value\r\n    const answer = this.editAnswerArea.value\r\n\r\n\r\n    if (question !== '' && answer !== '') {\r\n      let currentCategory, currentQuestion;\r\n      if (this.props.state[0] === 2222 || this.props.state[0] === 1111) {\r\n        let link;\r\n        const id = this.props.state[1]\r\n        if (this.props.state[0] === 1111) link = id + Math.pow(10,12)\r\n        if (this.props.state[0] === 2222) link = id + Math.pow(10,11)\r\n        currentCategory = findCountById(link)\r\n        currentQuestion = findCountById(link, false);\r\n      } else {\r\n        currentCategory = findCountById(this.props.state[0])\r\n        currentQuestion = findCountById(this.props.state[1], false);\r\n      }\r\n      changeQuestion(currentCategory, currentQuestion, question, answer)\r\n      addedInNEW();\r\n      addBookmark();\r\n      this.props.alert('Question changed');\r\n      console.log(currentCategory, currentQuestion)\r\n      if (this.props.state[0] === 2222){\r\n        currentCategory = findCountById(this.props.state[0])\r\n        currentQuestion = findCountById(this.props.state[1], false);\r\n      }\r\n      this.props.setQuestion(findId(currentCategory,currentQuestion))\r\n    }\r\n\r\n    if (question === '') this.pulseTextarea(this.editQuestionArea);\r\n    if (answer === '') this.pulseTextarea(this.editAnswerArea);\r\n  }\r\n\r\n  pulseTextarea = (textarea) => {\r\n    textarea.className = 'rename danger';\r\n    setTimeout(() => { textarea.className = 'rename' }, 1800);\r\n    this.props.alert('Both fields must be filled', false)\r\n  };\r\n\r\n  onEnter = (e, func) => {\r\n    if (e.keyCode === 13 && !e.shiftKey) {\r\n      e.preventDefault();\r\n      this.check();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const currentQuestion = this.props.state[1];\r\n\r\n    return(\r\n      <React.Fragment>\r\n      <ul className=\"list-group\" id=\"question_list\">\r\n        <li className=\"list-group-item no-active question-bar-head header\">\r\n          <p>Edit Question</p>\r\n          <button\r\n           type=\"button\"\r\n           onClick={ () => this.props.setQuestion(currentQuestion) }\r\n           className=\"btn btn-secondary list header\">\r\n           <i className=\"fas fa-chevron-up\"></i>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className='question-area'>\r\n        <textarea\r\n          ref={(e) => {this.editQuestionArea = e}}\r\n          placeholder='Вопрос'>\r\n        </textarea>\r\n        <textarea\r\n          ref={(e) => {this.editAnswerArea = e}}\r\n          onKeyDown={ (e) => this.onEnter(e) }/>\r\n        <button\r\n          type=\"button\" onClick={ this.check }\r\n          className=\"btn btn-success btn-sm btn-block\">\r\n          Save\r\n        </button>\r\n      </div>\r\n      </ React.Fragment>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    setQuestion: (id) => dispatch(setQuestion(id)),\r\n    alert: (t, type) => dispatch(alert(t, type))\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\r\n","import Edit from './edit';\r\n\r\nexport default Edit;\r\n","import Questions from './questions';\r\n\r\nexport default Questions;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './questions.css';\r\n\r\nimport Head from './head';\r\nimport List from './list';\r\n// import Footer from './footer';\r\nimport Player from './player';\r\nimport AddQuestion from './add-question';\r\nimport Edit from './edit';\r\n\r\nconst Questions = (props) => {\r\n  const currentCategory = props.state[0]\r\n  const currentQuestion = props.state[1]\r\n  const addMenu = props.state[3]\r\n  const editMenu = props.state[4]\r\n\r\n  let head = currentCategory ? <Head /> : null\r\n\r\n  let content = (\r\n    <React.Fragment>\r\n      { head }\r\n      <List />\r\n    </React.Fragment>\r\n  )\r\n\r\n  if (currentQuestion) {\r\n    content = <Player />\r\n  }\r\n\r\n  if (addMenu) {\r\n    content = <AddQuestion />\r\n  }\r\n\r\n  if (editMenu) {\r\n    content = <Edit />\r\n  }\r\n\r\n  return(\r\n    <ul className=\"list-group\">\r\n      {content}\r\n    </ul>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\nexport default connect(mapStateToProps)(Questions);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { confirm, update } from '../actions'\r\n\r\nimport { findNameByStringDate } from '../../service/question-data.js';\r\n\r\nimport './confirm.css';\r\n\r\nclass Confirm extends Component {\r\n\r\n  keyEsc = (e) => {\r\n    if (e.key === 'Escape') {\r\n      this.modalClose();\r\n    }\r\n  }\r\n\r\n  modalOpen = () => {\r\n    const modal = document.getElementById('myModal');\r\n    const btn = document.getElementById('yes_modal');\r\n    modal.style.display = \"flex\";\r\n    btn.focus();\r\n  }\r\n\r\n  modalContent = (e) => {\r\n    const { id } = e.target\r\n    if (!e.target.hasAttribute('hold')) {\r\n      if (id === 'yes_modal') this.modalAccept()\r\n      this.modalClose()\r\n    }\r\n  }\r\n\r\n  modalAccept = () => {\r\n    const func = this.props.state[9][0]\r\n    func(this.props.state[9][1])\r\n    this.modalClose()\r\n  }\r\n\r\n  modalClose = () => {\r\n    const modal = document.getElementById('myModal');\r\n    this.props.confirm();\r\n    modal.style.display = \"none\";\r\n  }\r\n\r\n  dateRecomender = (name) => {\r\n    let first  = name.split(' - ')[0]\r\n    //let second = name.split(' - ')[1]\r\n    let second = this.dateConverter(new Date())\r\n    let firstStamp = this.dateConverter(first)\r\n    let secondStamp = this.dateConverter(second)\r\n    let difference = secondStamp - firstStamp\r\n    let dayPass = this.dateConverter(difference)\r\n    let recomend = this.dateConverter(new Date(secondStamp + difference + 172800000))\r\n    return {pass: dayPass, recomend: recomend}\r\n  }\r\n\r\n  dateConverter = (date, stamp = 0) => {\r\n    if (typeof(date) === 'number') {\r\n      let seconds = date / 1000\r\n      let minutes = seconds / 60\r\n      let hours = minutes / 60\r\n      let days = (hours / 24) - 1\r\n      return days\r\n    }\r\n\r\n    if (typeof(date) === 'string') {\r\n      let day = +date.substring(0, 2)\r\n      let month = +date.substring(3, 5)\r\n      let year = +('20' + date.substring(6))\r\n      let timestamp = (new Date(year, month - 1, day)).getTime()\r\n      return timestamp\r\n    }\r\n\r\n    if (typeof(date) === 'object') {\r\n      let day   =  '' + date.getDate();\r\n      let month =  '' + (date.getMonth() + 1);\r\n      let year  = ('' + date.getFullYear()).substring(2)\r\n      if (day.length   === 1)   day = '0' + day\r\n      if (month.length === 1) month = '0' + month\r\n      return `${day}.${month}.${year}`\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    let categry_message = ''\r\n    let new_name = this.props.state[9][4]\r\n    let name = this.props.state[9][3]\r\n    if (new_name === '') {\r\n\r\n      //let second_date = name.split(' - ')[1]\r\n      let recomendDate =\r\n        this.dateConverter(new Date()) + ' - ' +\r\n        this.dateRecomender(name).recomend\r\n\r\n      if (name !== '') {\r\n        setTimeout(() => {\r\n\r\n            document.getElementById('modal_input').value = recomendDate\r\n            categry_message = `Списков в этот день: ${ this.categoryDetector(recomendDate) }`\r\n            document.getElementById('category_message').innerText = categry_message\r\n\r\n          },100)\r\n      }\r\n\r\n    } else {\r\n      setTimeout(() => {\r\n\r\n          document.getElementById('modal_input').value = new_name\r\n          categry_message = `Списков в этот день: ${ this.categoryDetector(new_name) }`\r\n          document.getElementById('category_message').innerText = categry_message\r\n\r\n        },100)\r\n    }\r\n\r\n  }\r\n\r\n  changeDate = (btn) => {\r\n    let name = ''\r\n    if (!this.props.state[9][4]) {\r\n      name = document.getElementById('modal_input').value\r\n    } else {\r\n      name = this.props.state[9][4]\r\n    }\r\n    let second_date = name.split(' - ')[1]\r\n    let timestamp = this.dateConverter(second_date);\r\n    let today = this.dateConverter(new Date())\r\n\r\n    const local_convert = (type) => {\r\n      //let first_click = this.props.state[9][4] == ''\r\n      let full_date = ''\r\n\r\n      if (type === 'next') {\r\n\r\n        full_date = new Date(timestamp + 86400000).toLocaleString()\r\n                                                      .split(', ')[0]\r\n      }\r\n\r\n      if (type === 'prev') {\r\n\r\n        full_date = new Date(timestamp - 86400000).toLocaleString()\r\n                                                      .split(', ')[0]\r\n      }\r\n\r\n      let split_str = full_date.split('.')\r\n      let day   = '' + split_str[0]\r\n      let month = '' + (+split_str[1])\r\n      //if (first_click) month = '' + (+split_str[1] + 1)\r\n      let year  = split_str[2].substring(2)\r\n      if (day.length   === 1)   day = '0' + day\r\n      if (month.length === 1) month = '0' + month\r\n      return `${day}.${month}.${year}`\r\n\r\n    }\r\n\r\n    if (btn === 'up') {\r\n      let next_day = local_convert('next')\r\n      this.props.state[9][4] = `${today} - ${next_day}`\r\n    }\r\n\r\n    if (btn === 'down') {\r\n      let prev_day = local_convert('prev')\r\n      this.props.state[9][4] = `${today} - ${prev_day}`\r\n    }\r\n    this.props.update()\r\n  }\r\n\r\n  categoryDetector = (date) => {\r\n    let research_date = date.split(' - ')[1]\r\n    return findNameByStringDate(research_date)\r\n  }\r\n\r\n  render() {\r\n    const type = this.props.state[9][2]\r\n    const name = this.props.state[9][3]\r\n\r\n    let text = ''\r\n    let fill = null\r\n\r\n    if (type === 'done') {\r\n      text = `прошло дней с момента повторения:\r\n                ${this.dateRecomender(name).pass}`\r\n      fill = (\r\n        <React.Fragment>\r\n          <p hold=\"true\" id=\"modal_message\" className=\"under-modal\">\r\n            { text }\r\n          </p>\r\n          <p hold=\"true\" id=\"category_message\" className=\"under-modal\"></p>\r\n          <div hold=\"true\" id=\"modul_row\" className='row'>\r\n            <div hold=\"true\" className=\"col-lg-12\">\r\n              <div hold=\"true\" className=\"col-lg-6 my\">\r\n                <input\r\n                  hold=\"true\"\r\n                  className=\"input-group-text\"\r\n                  id=\"modal_input\" type=\"text\"\r\n                />\r\n                <div hold=\"true\" id =\"modal_btn\" className=\"modal_btn_group\">\r\n                  <button hold=\"true\" type=\"button\" className=\"modul_btn\"\r\n                    onClick={ () => this.changeDate('up') }>\r\n                    <i hold=\"true\" className=\"fa fa-angle-up\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                  <button hold=\"true\" type=\"button\" className=\"modul_btn\"\r\n                    onClick={ () => this.changeDate('down') }>\r\n                    <i hold=\"true\" className=\"fa fa-angle-down\" aria-hidden=\"true\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )\r\n    }\r\n\r\n    if (type === 'del_question') {\r\n      text = `Вы действительно хотите удалить этот вопрос?`\r\n      fill = <p id=\"modal_message\" className=\"under-modal\"> { text }</p>\r\n    }\r\n\r\n    if (type === 'del_category') {\r\n      text = `Вы действительно\r\n              хотите безвозвратно удалить эту категорию вопросов?`\r\n      fill = <p id=\"modal_message\" className=\"under-modal\"> { text }</p>\r\n    }\r\n\r\n    if (text !== '') this.modalOpen()\r\n\r\n    return(\r\n        <div id=\"myModal\"\r\n          className=\"modal\"\r\n          onClick={ (e) => this.modalContent(e) }>\r\n          <div hold=\"true\" className=\"modal-content\">\r\n            { fill }\r\n            <button id=\"yes_modal\"\r\n              onKeyDown={ (e) => this.keyEsc(e) }\r\n              className=\"btn under-modal red\">\r\n              Yes\r\n            </button>\r\n            <button id=\"close_modal\"\r\n              className=\"btn under-modal\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    update: () => dispatch(update()),\r\n    confirm: (func, id, type, name, new_name) => {\r\n      return dispatch(confirm(func, id, type, name, new_name))\r\n    }\r\n  }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Confirm);\r\n","import Confirm from './confirm';\r\n\r\nexport default Confirm;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { alert } from '../actions';\r\n\r\nimport './alert.css'\r\n\r\nclass Alert extends Component {\r\n\r\n  render() {\r\n\r\n    setTimeout( () => this.props.alert(null), 2000 );\r\n\r\n    let type = this.props.state[6] ? \"success\" : \"danger\"\r\n\r\n    return(\r\n      <div className={ `alert alert-${type}` }>\r\n        { this.props.state[5] }\r\n      </div>\r\n    )\r\n\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{ alert: (text) => dispatch(alert(text)) }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Alert);\r\n","import Alert from './alert';\r\n\r\nexport default Alert;\r\n","import Row from './row';\r\n\r\nexport default Row;\r\n","import React from 'react';\r\n\r\nimport './row.css';\r\n\r\nconst Row = ({ left, right }) => {\r\n  return(\r\n    <div className='row'>\r\n    <div className=\"col-lg-1\"></div>\r\n      <div className=\"col-lg-5\">\r\n        {left}\r\n      </div>\r\n      <div className=\"col-lg-5\">\r\n        {right}\r\n      </div>\r\n      <div className=\"col-lg-1\"></div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Row;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport './app.css';\r\n\r\nimport Header from '../header';\r\nimport Categories from '../categories';\r\nimport Questions from '../questions';\r\nimport Confirm from '../confirm';\r\n\r\nimport Alert from '../alerts';\r\nimport { connect } from 'react-redux';\r\n// import { waveEffects } from '../../service/effects';\r\n\r\nimport Row from '../row';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    let alert = null;\r\n    let left = <Categories />\r\n    let right = <Questions />;\r\n    if (this.props.state[5]) alert = <Alert />\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        { alert }\r\n        <Header />\r\n        <Confirm />\r\n        <Router>\r\n          <Row left={left} right={right}/>\r\n        </Router>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({ state: state })\r\nexport default connect(mapStateToProps)(App);\r\n","import App from './app';\r\n\r\nexport default App;\r\n","const initialState = [\r\n\r\n  null, // текущая Категория\r\n  null, // текущий Вопрос\r\n  0, // update\r\n  false, // режим добавления нового вопроса\r\n  false, // режим редактирования вопроса\r\n  null, // режим алерта\r\n  true, // тип алерта\r\n  '', // Строка поиск по Категориям\r\n  '', // Строка поиска по Вопросам\r\n  [null, null, null, '', ''] // Модальное окно\r\n\r\n]\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n\r\n    case 'UPDATE':\r\n      return state = [\r\n        null,\r\n        null,\r\n        state[2] + 1,\r\n        false,\r\n        false,\r\n        state[5],\r\n        state[6],\r\n        state[7],\r\n        '',\r\n        state[9]\r\n      ];\r\n\r\n    case 'SET_CATEGORY':\r\n      return state = [\r\n        action.payload,\r\n        null,\r\n        state[2],\r\n        false,\r\n        false,\r\n        state[5],\r\n        state[6],\r\n        state[7],\r\n        '',\r\n        state[9]\r\n      ];\r\n\r\n    case 'SET_QUESTION':\r\n      return state = [\r\n        state[0] ,\r\n        action.payload,\r\n        state[2],\r\n        false,\r\n        false,\r\n        state[5],\r\n        state[6],\r\n        state[7],\r\n        state[8],\r\n        state[9]\r\n      ];\r\n\r\n    case 'HIDE_PLAYER':\r\n      return state = [\r\n        state[0] ,\r\n        null,\r\n        state[2],\r\n        false,\r\n        false,\r\n        state[5],\r\n        state[6],\r\n        state[7],\r\n        state[8],\r\n        state[9]\r\n      ];\r\n\r\n    case 'ADD_NEW_QUESTION':\r\n      return state = [\r\n        state[0] ,\r\n        state[1],\r\n        state[2],\r\n        true,\r\n        false,\r\n        state[5],\r\n        state[6],\r\n        state[7],\r\n        state[8],\r\n        state[9]\r\n      ];\r\n\r\n    case 'EDIT_QUESTION':\r\n      return state = [\r\n        state[0] ,\r\n        action.payload,\r\n        state[2],\r\n        false,\r\n        true,\r\n        state[5],\r\n        state[6],\r\n        state[7],\r\n        state[8],\r\n        state[9]\r\n      ];\r\n\r\n    case 'ALERT':\r\n      return state = [\r\n        state[0] ,\r\n        state[1],\r\n        state[2],\r\n        state[3],\r\n        state[4],\r\n        action.payload[0],\r\n        action.payload[1],\r\n        state[7],\r\n        state[8],\r\n        state[9]\r\n      ];\r\n\r\n    case 'CATEGORY_SEARCH':\r\n      return state = [\r\n        state[0] ,\r\n        state[1],\r\n        state[2],\r\n        state[3],\r\n        state[4],\r\n        state[5],\r\n        state[6],\r\n        action.payload,\r\n        state[8],\r\n        state[9]\r\n      ];\r\n\r\n    case 'QUESTION_SEARCH':\r\n      return state = [\r\n        state[0] ,\r\n        state[1],\r\n        state[2],\r\n        state[3],\r\n        state[4],\r\n        state[5],\r\n        state[6],\r\n        state[7],\r\n        action.payload,\r\n        state[9]\r\n      ];\r\n\r\n    case 'MODAL':\r\n      return state = [\r\n        state[0] ,\r\n        state[1],\r\n        state[2],\r\n        state[3],\r\n        state[4],\r\n        state[5],\r\n        state[6],\r\n        state[7],\r\n        state[8],\r\n        action.payload\r\n      ];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import reducer from './reducer';\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport { Provider } from 'react-redux';\r\nimport reducer from './components/reducer';\r\nimport { createStore } from 'redux'\r\n\r\nconst store = createStore(reducer)\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}